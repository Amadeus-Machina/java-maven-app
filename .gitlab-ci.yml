stages:
 - release
 - build

release:
  stage: release
  image: maven:3.6.3-jdk-11
  script:
    -  git clone https://root:glpat-FUxW549x1jebmawpsa9B@gitlab.com/yassermagdy430/java-maven-app.git
    -  cd ./$CI_PROJECT_NAME
    -  git config user.name root
    -  git config user.email yassermagdy430@gmail.com
    -  echo $CI_COMMIT_MESSAGE
   # -  mvn release:prepare -DincrementalRelease=true
    #- mvn versions:set -DnewVersion=$(mvn help:evaluate -Dexpression="project.version.replaceFirst('^(\\d+\\.\\d+\\.)(\\d+)$', '\${1}' + (Integer.valueOf('\${2}') + 1))" -q -DforceStdout=true) versions:commit
   #- mvn versions:set -DnewVersion=$(mvn help:evaluate -Dexpression="project.version.replaceFirst('^(\\d+\\.)(\\d+\\.\\d+)$', '\${1}' + (Integer.valueOf('\${2}') + 1) + '.0')" -q -DforceStdout=true) versions:commit
    #- mvn versions:set -DnewVersion=$(mvn help:evaluate -Dexpression="project.version.replaceFirst('^(\\d+\\.)(\\d+\\.)(\\d+)$', '\${1}' + (Integer.valueOf('\${2}') + 1) + '.' + (Integer.valueOf('\${3}') + 1))" -q -DforceStdout=true) versions:commit
    #- mvn release:prepare
    #- mvn versions:set -DnewVersion=$(mvn help:evaluate -Dexpression="project.version.replaceFirst('^(\\d+\\.)(\\d+\\.)(\\d+)$', '\${1}' + (Integer.valueOf('\${2}') + 1) + '.0')" -q -DforceStdout=true) versions:commit
    ## - mvn release:prepare -DreleaseVersion=1.24.4 -DdevelopmentVersion=1.25.0-SNAPSHOT
    #- mvn build-helper:parse-version versions:set release:prepare -DdevelopmentVersion =\${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion}.0-SNAPSHOT 
    # - mvn versions:set -DnewVersion=${parsedVersion.majorVersion}.${parsedVersion.nextMinorVersion}.0-SNAPSHOT -DgenerateBackupPoms=false
    - mvn build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.nextMinorVersion}.${parsedVersion.nextIncrementalVersion}-SNAPSHOT'
          # - |
    #   if [[ CI_COMMIT_MESSAGE == *"bugfix"* ]]
    #   then
    #     mvn release:prepare
    #   elif [[ CI_COMMIT_MESSAGE == *"feature"* ]]
    #   then
    #     #mvn release:prepare -DincrementMinorVersion=true
    #     mvn release:prepare -DincrementalRelease=true
    #   else
    #     mvn release:prepare
    #   fi