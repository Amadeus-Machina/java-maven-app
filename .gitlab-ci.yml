stages:
 - release
 - build

# release:
#   stage: release
#   image: maven:3.6.3-jdk-11
#   script:
#     -  git clone https://root:glpat-FUxW549x1jebmawpsa9B@gitlab.com/yassermagdy430/java-maven-app.git
#     -  cd ./$CI_PROJECT_NAME
#     -  git config user.name root
#     -  git config user.email yassermagdy430@gmail.com
#     -  echo $CI_COMMIT_MESSAGE
#     #- mvn release:prepare
#     - |
#       if [[ $CI_COMMIT_MESSAGE == *"[bugfix]"* ]]
#       then
#         # export RELEASE_TYPE="patch"
#         new_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | awk -F. '{OFS="."; $3=$3+1; print $0}')
#       elif [[ $CI_COMMIT_MESSAGE == *"[feature]"* ]]
#       then
#         # export RELEASE_TYPE="minor"
#         new_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | awk -F. '{OFS="."; $2=$2+1; $3=0; print $0}')
#       # else
#       #   export RELEASE_TYPE="major"
#       fi

#       # if [[ -n $RELEASE_TYPE ]]
#       # then
#       #   mvn  release:update-versions -DautoVersionSubmodules=true -DupdateMatchingVersions=true -DreleaseType=$RELEASE_TYPE release:prepare
#       # fi
#       - find . -name "pom.xml" -exec sed -i "s/<version>.*<\/version>/<version>$new_version<\/version>/g" {} \;
#       - git add */pom.xml
#       - echo "New version: $new_version"
  
  versioning:
    stage: build
    script:
      -  git clone https://root:glpat-FUxW549x1jebmawpsa9B@gitlab.com/yassermagdy430/java-maven-app.git
      -  cd ./$CI_PROJECT_NAME
      -  git config user.name root
      -  git config user.email yassermagdy430@gmail.com
      -  echo $CI_COMMIT_MESSAGE
      - commit_message=$(git log --format=%B --no-merges -n 1 | tr -d '\n')
      - |
        if [[ $commit_message == *"bugfix"* ]]; then
           new_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | awk -F. '{OFS="."; $3=$3+1; print $0}')
        elif [[ $commit_message == *"feature"* ]]; then
           new_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | awk -F. '{OFS="."; $2=$2+1; $3=0; print $0}')
        else
           new_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        fi
      - find . -name "pom.xml" -exec sed -i "s/<version>.*<\/version>/<version>$new_version<\/version>/g" {} \;
      - git add */pom.xml
      - echo $new_version
  
   # - mvn release:perform
